{% extends 'base.html.twig' %}

{% block title %}Question{% endblock %}

{% block body %}
    <h1>Question</h1>

    <table class="table">
        <tbody>
            <tr>
                <th>{{ question.user.username }}</th>
                <td><h3>{{ question.content }}</h3></td>
                <td></td>
            </tr>
            {% if question.answers.count > 0 %}
        <tr>
            <th colspan="2">Answers:</th>
        </tr>
            {% endif %}
        {% for answer in question.answers %}
            <tr>
                <th>{{ answer.user.username }}</th>
                <td>
                    {{ answer.content }}

                    {% if app.user and app.user.canVoteUp(answer) %}
                        <span data-id="{{ answer.id }}" onclick="voteUp('{{ answer.id }}')"><button>+</button></span>
                    {% endif %}

                    {% if app.user and app.user.canVoteDown(answer) %}
                    <span data-id="{{ answer.id }}" onclick="voteDown('{{ answer.id }}')"><button>-</button></span>
                    {% endif %}
                </td>
                <td>
                    Rated: {{ answer.totalRatingsCount }}
                </td>
            </tr>
        {% else %}
            <th colspan="2">No answers yet</th>
        {% endfor %}
        </tbody>
    </table>
<br/>
<br/>
    <a href="{{ path(app.user ? 'app_question_index' : 'homepage') }}">back to list</a>

    {% if app.user == question.user %}
        <a href="{{ path('app_question_edit', {'id': question.id}) }}">edit</a>
    {% endif %}
{% endblock %}

{% block javascripts %}
    <script>
        function voteUp(id) {
            const xhttp = new XMLHttpRequest();
            xhttp.onload = function() {
                location.reload()
            }
            const url = "{{ url('vote_up', {'id': 'XXXXX'}) }}".replace('XXXXX', id)
            xhttp.open("GET", url);
            xhttp.send();
        }
        function voteDown(id) {
            const xhttp = new XMLHttpRequest();
            xhttp.onload = function() {
                location.reload()
            }
            const url = "{{ url('vote_down', {'id': 'XXXXX'}) }}".replace('XXXXX', id)
            xhttp.open("GET", url);
            xhttp.send();
        }
    </script>
{% endblock %}